{"ast":null,"code":"import _classCallCheck from \"/home/hab21/Documents/develoment/desarrollo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/hab21/Documents/develoment/desarrollo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/hab21/Documents/develoment/desarrollo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/hab21/Documents/develoment/desarrollo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/hab21/Documents/develoment/desarrollo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/hab21/Documents/develoment/desarrollo/src/components/MainQuiz.js\";\nimport React from \"react\";\nimport { quizData } from \"./quizData\";\n\nvar MainQuiz =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MainQuiz, _React$Component);\n\n  function MainQuiz() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MainQuiz);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MainQuiz)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentQuestion: 0,\n      myAnswer: null,\n      options: [],\n      score: 0,\n      disabled: true,\n      isEnd: false\n    };\n\n    _this.loadQuizData = function () {\n      // console.log(quizData[0].question)\n      _this.setState(function () {\n        return {\n          questions: quizData[_this.state.currentQuestion].question,\n          answer: quizData[_this.state.currentQuestion].answer,\n          options: quizData[_this.state.currentQuestion].options\n        };\n      });\n    };\n\n    _this.nextQuestionHandler = function () {\n      // console.log('test')\n      var _this$state = _this.state,\n          myAnswer = _this$state.myAnswer,\n          answer = _this$state.answer,\n          score = _this$state.score;\n\n      if (myAnswer === answer) {\n        _this.setState({\n          score: score + 1\n        });\n      }\n\n      _this.setState({\n        currentQuestion: _this.state.currentQuestion + 1\n      });\n\n      console.log(_this.state.currentQuestion);\n    };\n\n    _this.checkAnswer = function (answer) {\n      _this.setState({\n        myAnswer: answer,\n        disabled: false\n      });\n    };\n\n    _this.finishHandler = function () {\n      if (_this.state.currentQuestion === quizData.length - 1) {\n        _this.setState({\n          isEnd: true\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(MainQuiz, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadQuizData();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      if (this.state.currentQuestion !== prevState.currentQuestion) {\n        this.setState(function () {\n          return {\n            disabled: true,\n            questions: quizData[_this2.state.currentQuestion].question,\n            options: quizData[_this2.state.currentQuestion].options,\n            answer: quizData[_this2.state.currentQuestion].answer\n          };\n        });\n      }\n    } //check answer\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          options = _this$state2.options,\n          myAnswer = _this$state2.myAnswer,\n          currentQuestion = _this$state2.currentQuestion,\n          isEnd = _this$state2.isEnd;\n\n      if (isEnd) {\n        return React.createElement(\"div\", {\n          className: \"result\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Tu puntuacion final es... \", this.state.score, \" points \"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"Las opciones correctas eran las siguientes:\", React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, quizData.map(function (item, index) {\n          return React.createElement(\"li\", {\n            className: \"ui floating message options\",\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, item.answer);\n        }))));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, this.state.questions, \" \"), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Questions \".concat(currentQuestion, \"  out of \").concat(quizData.length - 1, \" remaining \")), options.map(function (option) {\n          return React.createElement(\"p\", {\n            key: option.id,\n            className: \"ui floating message options\\n         \".concat(myAnswer === option ? \"selected\" : null, \"\\n         \"),\n            onClick: function onClick() {\n              return _this3.checkAnswer(option);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, option);\n        }), currentQuestion < quizData.length - 1 && React.createElement(\"button\", {\n          className: \"ui inverted button\",\n          disabled: this.state.disabled,\n          onClick: this.nextQuestionHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, \"Next\"), currentQuestion === quizData.length - 1 && React.createElement(\"button\", {\n          className: \"ui inverted button\",\n          onClick: this.finishHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, \"Finish\"));\n      }\n    }\n  }]);\n\n  return MainQuiz;\n}(React.Component);\n\nexport default MainQuiz;","map":{"version":3,"sources":["/home/hab21/Documents/develoment/desarrollo/src/components/MainQuiz.js"],"names":["React","quizData","MainQuiz","state","currentQuestion","myAnswer","options","score","disabled","isEnd","loadQuizData","setState","questions","question","answer","nextQuestionHandler","console","log","checkAnswer","finishHandler","length","prevProps","prevState","map","item","index","option","id","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { quizData } from \"./quizData\";\n\nclass MainQuiz extends React.Component {\n  state = {\n    currentQuestion: 0,\n    myAnswer: null,\n    options: [],\n    score: 0,\n    disabled: true,\n    isEnd: false\n  };\n\n  loadQuizData = () => {\n    // console.log(quizData[0].question)\n    this.setState(() => {\n      return {\n        questions: quizData[this.state.currentQuestion].question,\n        answer: quizData[this.state.currentQuestion].answer,\n        options: quizData[this.state.currentQuestion].options\n      };\n    });\n  };\n\n  componentDidMount() {\n    this.loadQuizData();\n  }\n  nextQuestionHandler = () => {\n    // console.log('test')\n    const { myAnswer, answer, score } = this.state;\n\n    if (myAnswer === answer) {\n      this.setState({\n        score: score + 1\n      });\n    }\n\n    this.setState({\n      currentQuestion: this.state.currentQuestion + 1\n    });\n    console.log(this.state.currentQuestion);\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.currentQuestion !== prevState.currentQuestion) {\n      this.setState(() => {\n        return {\n          disabled: true,\n          questions: quizData[this.state.currentQuestion].question,\n          options: quizData[this.state.currentQuestion].options,\n          answer: quizData[this.state.currentQuestion].answer\n        };\n      });\n    }\n  }\n  //check answer\n  checkAnswer = answer => {\n    this.setState({ myAnswer: answer, disabled: false });\n  };\n  finishHandler = () => {\n    if (this.state.currentQuestion === quizData.length - 1) {\n      this.setState({\n        isEnd: true\n      });\n    }\n  };\n  render() {\n    const { options, myAnswer, currentQuestion, isEnd } = this.state;\n\n    if (isEnd) {\n      return (\n        <div className=\"result\">\n          <h3>Tu puntuacion final es... {this.state.score} points </h3>\n          <p>\n           Las opciones correctas eran las siguientes:\n            <ul>\n              {quizData.map((item, index) => (\n                <li className=\"ui floating message options\" key={index}>\n                  {item.answer}\n                </li>\n              ))}\n            </ul>\n          </p>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <h1>{this.state.questions} </h1>\n          <span>{`Questions ${currentQuestion}  out of ${quizData.length -\n            1} remaining `}</span>\n          {options.map(option => (\n            <p\n              key={option.id}\n              className={`ui floating message options\n         ${myAnswer === option ? \"selected\" : null}\n         `}\n              onClick={() => this.checkAnswer(option)}\n            >\n              {option}\n            </p>\n          ))}\n          {currentQuestion < quizData.length - 1 && (\n            <button\n              className=\"ui inverted button\"\n              disabled={this.state.disabled}\n              onClick={this.nextQuestionHandler}\n            >\n              Next\n            </button>\n          )}\n          {/* //adding a finish button */}\n          {currentQuestion === quizData.length - 1 && (\n            <button className=\"ui inverted button\" onClick={this.finishHandler}>\n              Finish\n            </button>\n          )}\n        </div>\n      );\n    }\n  }\n}\n\nexport default MainQuiz;\n"]},"metadata":{},"sourceType":"module"}